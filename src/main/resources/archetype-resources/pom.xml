<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
	<version>${version}</version>
	<name>${artifactId}</name>
	<description>Spring Boot project for ${artifactId} microservice</description>

	<properties>
		<java.version>1.8</java.version>
    <jacoco.version>0.7.9</jacoco.version>
	</properties>


	<dependencies>
		<!-- springboot health -->
		<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Mysql connector -->
		<dependency>
		  <groupId>mysql</groupId>
		  <artifactId>mysql-connector-java</artifactId>
		  <version>8.0.15</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<!-- genenate code -->
		<dependency>
		  <groupId>org.projectlombok</groupId>
		  <artifactId>lombok</artifactId>
		  <optional>true</optional>
		</dependency>
		<!-- spring data / jpa -->
			<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- basic web dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- remove test dependecies with environment database -->
		<dependency>
		  <groupId>org.flywaydb</groupId>
		  <artifactId>flyway-core</artifactId>
		</dependency>
		<!-- test embedded db -->
		<dependency>
		  <groupId>com.wix</groupId>
		  <artifactId>wix-embedded-mysql</artifactId>
		  <version>4.2.0</version>
		  <scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
                <!-- docker config for deploying the project -->
                <configuration>
                  <mainClass>${project.groupId}.${project.artifactId}.${appName}Application</mainClass>
                  <classifier>bootified</classifier>
                  <finalName>${project.artifactId}</finalName>
                </configuration>
                <executions>
                  <execution>
                    <goals>
                      <goal>repackage</goal>
                    </goals>
                  </execution>
                </executions>
			</plugin>


            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>target/jacoco.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>target/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <!-- The following configuration allows, using 'mvn clean verify' command, to execute the tests and check the
                    coverage, showing an ERROR if the minimum coverage is not reached.
                    The 'mvn clean test' command won't be affected. It will work as always and won't show ERROR if coverage is not reached -->
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <!-- Options for 'element': BUNDLE, CLASS, GROUP, METHOD, PACKAGE, SOURCEFILE
                                          More details here: jacoco.org/jacoco/trunk/doc/api/org/jacoco/core/analysis/ICoverageNode.ElementType.html -->
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.9</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/constants/*</exclude>
                        <exclude>**/entities/**</exclude>
                        <exclude>**/dtos/**</exclude>
                        <exclude>**/exceptions/**</exclude>
                        <exclude>**/*Application.*</exclude>
                    </excludes>
                </configuration>
            </plugin>

		</plugins>
	</build>

</project>
